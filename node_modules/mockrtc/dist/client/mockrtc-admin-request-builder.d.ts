/// <reference types="node" />
import * as stream from 'stream';
import { AdminQuery } from 'mockttp/dist/client/admin-query';
import { MockRTCEvent, MockRTCEventData } from '../mockrtc';
import { HandlerStepDefinition } from '../handling/handler-step-definitions';
import { MatcherDefinition } from '../matching/matcher-definitions';
/**
 * This is part of Mockttp's experimental 'pluggable admin' API. This may change
 * unpredictably, even in minor releases.
 *
 * @internal
 */
export declare class MockRTCAdminRequestBuilder {
    buildCreatePeerQuery(handlerSteps: Array<HandlerStepDefinition>, adminStream: stream.Duplex): AdminQuery<{
        createPeer: {
            peerId: string;
        };
    }, {
        peerId: string;
    }>;
    buildAddRuleQuery(matchers: Array<MatcherDefinition>, handlerSteps: Array<HandlerStepDefinition>, adminStream: stream.Duplex): AdminQuery<void>;
    buildSetRulesQuery(rules: Array<{
        matchers: MatcherDefinition[];
        steps: HandlerStepDefinition[];
    }>, adminStream: stream.Duplex): AdminQuery<void>;
    buildSubscriptionRequest<E extends MockRTCEvent>(event: E): AdminQuery<MockRTCEventData[E]> | undefined;
}
