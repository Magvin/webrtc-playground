import type { PluggableAdmin } from 'mockttp';
import { MockRTC, MockRTCEvent, MockRTCOptions, MockRTCRuleDefinition } from "../mockrtc";
import { MockRTCBase } from '../mockrtc-base';
import type { MockRTCPeer } from '../mockrtc-peer';
import { HandlerStepDefinition } from '../handling/handler-step-definitions';
import { MatcherDefinition } from '../matching/matcher-definitions';
export declare type MockRTCClientOptions = PluggableAdmin.AdminClientOptions & MockRTCOptions;
export declare class MockRTCClient extends MockRTCBase implements MockRTC {
    private options;
    private adminClient;
    private requestBuilder;
    constructor(options?: MockRTCClientOptions);
    getMatchingPeer(): MockRTCPeer;
    buildPeerFromDefinition(handlerSteps: HandlerStepDefinition[]): Promise<MockRTCPeer>;
    addRuleFromDefinition(matchers: MatcherDefinition[], handlerSteps: HandlerStepDefinition[]): Promise<void>;
    setRulesFromDefinitions(rules: Array<MockRTCRuleDefinition>): Promise<void>;
    start(): Promise<void>;
    stop(): Promise<void>;
    on(event: MockRTCEvent, callback: any): Promise<void>;
}
