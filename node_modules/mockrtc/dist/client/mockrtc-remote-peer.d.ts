/// <reference types="node" />
import * as PluggableAdmin from 'mockttp/dist/pluggable-admin-api/pluggable-admin.browser';
import { MockRTCSessionDescription } from '../mockrtc';
import { MockRTCPeer, MockRTCOfferParams, MockRTCExternalOfferParams, MockRTCExternalAnswerParams, MockRTCAnswerParams, MockRTCSession, OfferOptions, AnswerOptions } from "../mockrtc-peer";
export declare class MockRTCRemotePeer implements MockRTCPeer {
    readonly peerId: string;
    private adminClient;
    constructor(peerId: string, adminClient: PluggableAdmin.AdminClient<{}>);
    createOffer(options?: OfferOptions): Promise<MockRTCOfferParams>;
    createExternalOffer(options?: OfferOptions): Promise<MockRTCExternalOfferParams>;
    answerOffer(offer: MockRTCSessionDescription, options?: AnswerOptions): Promise<MockRTCAnswerParams>;
    answerExternalOffer(offer: MockRTCSessionDescription, options?: AnswerOptions): Promise<MockRTCExternalAnswerParams>;
    getSession(sessionId: string): MockRTCSession;
    getAllMessages(): Promise<(string | Buffer)[]>;
    getMessagesOnChannel(channelName: string): Promise<Array<string | Buffer>>;
}
