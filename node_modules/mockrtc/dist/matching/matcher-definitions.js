"use strict";
/*
 * SPDX-FileCopyrightText: 2022 Tim Perry <tim@httptoolkit.tech>
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MatcherDefinitionLookup = exports.UserAgentRegexMatcherDefinition = exports.UrlRegexMatcherDefinition = exports.HostnameMatcherDefinition = exports.HasMediaTrackMatcherDefinition = exports.HasAudioTrackMatcherDefinition = exports.HasVideoTrackMatcherDefinition = exports.HasDataChannelMatcherDefinition = exports.Serializable = void 0;
const PluggableAdmin = require("mockttp/dist/pluggable-admin-api/pluggable-admin.browser");
exports.Serializable = PluggableAdmin.Serialization.Serializable;
class HasDataChannelMatcherDefinition extends exports.Serializable {
    constructor() {
        super(...arguments);
        this.type = 'has-rtc-data-channel';
    }
    explain() {
        return `with a data channel`;
    }
}
exports.HasDataChannelMatcherDefinition = HasDataChannelMatcherDefinition;
class HasVideoTrackMatcherDefinition extends exports.Serializable {
    constructor() {
        super(...arguments);
        this.type = 'has-rtc-video-track';
    }
    explain() {
        return `with a video track`;
    }
}
exports.HasVideoTrackMatcherDefinition = HasVideoTrackMatcherDefinition;
class HasAudioTrackMatcherDefinition extends exports.Serializable {
    constructor() {
        super(...arguments);
        this.type = 'has-rtc-audio-track';
    }
    explain() {
        return `with an audio track`;
    }
}
exports.HasAudioTrackMatcherDefinition = HasAudioTrackMatcherDefinition;
class HasMediaTrackMatcherDefinition extends exports.Serializable {
    constructor() {
        super(...arguments);
        this.type = 'has-rtc-media-track';
    }
    explain() {
        return `with any media track`;
    }
}
exports.HasMediaTrackMatcherDefinition = HasMediaTrackMatcherDefinition;
class HostnameMatcherDefinition extends exports.Serializable {
    constructor(hostname) {
        super();
        this.hostname = hostname;
        this.type = 'rtc-page-hostname';
    }
    explain() {
        return `from a page on ${this.hostname}`;
    }
}
exports.HostnameMatcherDefinition = HostnameMatcherDefinition;
class UrlRegexMatcherDefinition extends exports.Serializable {
    constructor(regex) {
        super();
        this.type = 'rtc-page-regex';
        this.regexSource = regex.source;
        this.regexFlags = regex.flags;
    }
    explain() {
        return `from a page with URL matching /${this.regexSource}/${this.regexFlags}`;
    }
}
exports.UrlRegexMatcherDefinition = UrlRegexMatcherDefinition;
class UserAgentRegexMatcherDefinition extends exports.Serializable {
    constructor(regex) {
        super();
        this.type = 'rtc-user-agent-regex';
        this.regexSource = regex.source;
        this.regexFlags = regex.flags;
    }
    explain() {
        return `from a user agent matching /${this.regexSource}/${this.regexFlags}`;
    }
}
exports.UserAgentRegexMatcherDefinition = UserAgentRegexMatcherDefinition;
exports.MatcherDefinitionLookup = {
    'has-rtc-data-channel': HasDataChannelMatcherDefinition,
    'has-rtc-video-track': HasVideoTrackMatcherDefinition,
    'has-rtc-audio-track': HasAudioTrackMatcherDefinition,
    'has-rtc-media-track': HasMediaTrackMatcherDefinition,
    'rtc-page-hostname': HostnameMatcherDefinition,
    'rtc-page-regex': UrlRegexMatcherDefinition,
    'rtc-user-agent-regex': UserAgentRegexMatcherDefinition
};
//# sourceMappingURL=matcher-definitions.js.map