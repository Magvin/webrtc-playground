import { MockRTC, MockRTCEventData, MockRTCPeerBuilder, MockRTCRuleDefinition } from "./mockrtc";
import { MockRTCPeer } from "./mockrtc-peer";
import { HandlerStepDefinition } from "./handling/handler-step-definitions";
import { MatcherDefinition } from "./matching/matcher-definitions";
import { MockRTCRuleBuilder } from "./rule-builder";
export declare abstract class MockRTCBase implements MockRTC {
    abstract getMatchingPeer(): MockRTCPeer;
    abstract start(): Promise<void>;
    abstract stop(): Promise<void>;
    abstract on<E extends keyof MockRTCEventData>(event: E, callback: (param: MockRTCEventData[E]) => void): Promise<void>;
    buildPeer(): MockRTCPeerBuilder;
    abstract buildPeerFromDefinition(handlerStepDefinitions: HandlerStepDefinition[]): Promise<MockRTCPeer>;
    forConnections(): MockRTCRuleBuilder;
    abstract addRuleFromDefinition(matcherDefinitions: MatcherDefinition[], handlerStepDefinitions: HandlerStepDefinition[]): Promise<void>;
    abstract setRulesFromDefinitions(ruleDefinitions: Array<MockRTCRuleDefinition>): Promise<void>;
}
