/// <reference types="node" />
/**
 * The builder logic for composing RTC handling behaviour for both mock peers and rules,
 * by internally queuing defined actions until a `.thenX()` method is called to compile
 * the actions into either a peer or a rule (handled by an abstract method).
 */
export declare class MockRTCHandlerBuilder<R> {
    private buildCallback;
    private handlerSteps;
    constructor(buildCallback: (handlerSteps: HandlerStep[]) => Promise<R>);
    waitForMessage(): this;
    thenReply(response: string | Buffer): Promise<R>;
}
export interface HandlerStep {
}
