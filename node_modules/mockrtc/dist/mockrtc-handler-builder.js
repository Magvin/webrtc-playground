"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockRTCHandlerBuilder = void 0;
/**
 * The builder logic for composing RTC handling behaviour for both mock peers and rules,
 * by internally queuing defined actions until a `.thenX()` method is called to compile
 * the actions into either a peer or a rule (handled by an abstract method).
 */
class MockRTCHandlerBuilder {
    constructor(buildCallback) {
        this.buildCallback = buildCallback;
        this.handlerSteps = [];
    }
    waitForMessage() {
        // Handler logic not yet implemented
        return this;
    }
    thenReply(response) {
        // Handler logic not yet implemented
        return this.buildCallback(this.handlerSteps);
    }
}
exports.MockRTCHandlerBuilder = MockRTCHandlerBuilder;
//# sourceMappingURL=mockrtc-handler-builder.js.map